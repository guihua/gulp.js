@charset "UTF-8";
//-----------------------------------------------------  
// mixin scss
// 包括常用的mixin，%及@function
// mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
// %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段  
// @function，返回一个值，用于调用
//-----------------------------------------------------

// 圆角
@mixin border-radius($radius: 0) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

// 阴影
@mixin box-shadow($shadows...) {
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}

// 背景大小
@mixin background-size($size...) {
  // <length> | auto | cover | contain
  @if length($size) >= 1 {
    -webkit-background-size: $size;
    background-size: $size;
  } @else {
    -webkit-background-size: cover;
    background-size: cover;
  }
}

// 盒子模型
@mixin box-sizing($sizing:border-box){
    -webkit-box-sizing:$sizing;
    box-sizing:$sizing;
}

// box布局相关(09 spec 新的flexbox还待验证（定义在css3中）)
@mixin display-box() {
    display:-webkit-box;
    display:box;
}

@mixin box-orient($orient: horizontal) {
    -webkit-box-orient:$orient;
    box-orient:$orient;
}

@mixin box-align($align: center) {
    -webkit-box-align:$align;
    box-align:$align;
}

@mixin box-pack($align: center) {
    -webkit-box-pack:$align;
    box-pack:$align;
}

@mixin box-flex($scale) {
    -webkit-box-flex:$scale;
    box-flex:$scale;
}

// 变形，更多细节特性定义在mixin-extend中
@mixin transform($value) {
    -webkit-transform:$value;
    transform:$value;
}

// 动画，更多细节特性在mixin-extend中
@mixin transition($value) {
    -webkit-transition: $value;
    transition: $value;
}

@mixin animation($value) {
    -webkit-animation: $value;
    animation: $value;
}

//浏览器自动滚动 android4.0+, ios5.0+
@mixin auto-scroll(){
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

// float left & right
// 浮动元素
@mixin float($float: left) {
  float: $float;
}

// clearfix
// 闭合子元素的浮动
@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}


// Text overflow
// 元素可以设置宽度才可应用省略号
@mixin ellipsis-basic {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin ellipsis($width: 100%) {
  @include ellipsis-basic();
  width: $width;
}

// triangle
// 三角方向设置，提供参数：方向，大小和颜色，可以设置八个方向不同大小和颜色的三角形
%triangle-basic {
  content: "";
  height: 0;
  width: 0;
  overflow: hidden;
}
@mixin triangle($direction, $size, $borderColor) {
  @extend %triangle-basic;

  // 三角向上、向下、向右和向左时，设置边框样式 
  @if ($direction == top) or ($direction == right) or ($direction == bottom) or ($direction == left) {
    border-color: transparent;
    border-style: solid;
    border-width: $size / 2;

    @if $direction == top {
      border-bottom-color: $borderColor; // 三角向上时，底部边框颜色为$color
    } @else if $direction == right {
      border-left-color: $borderColor; // 三角向右时，左边边框颜色为$color
    } @else if $direction == bottom {
      border-top-color: $borderColor; // 三角向下时，顶部边框颜色为$color
    } @else if $direction == left {
      border-right-color: $borderColor; // 三角向左时，右边框颜色为$color
    }
  }
  // 当三角为左上、右上直角三角形时
  @else if ($direction == top-right) or ($direction == top-left) {
    border-top: $size solid $borderColor; // 顶边边框样式

    @if $direction == top-right {
      border-left: $size solid transparent; // 当三角为右上直角三角形时，设置左边边框为透明
    } @else if $direction == top-left {
      border-right: $size solid transparent; // 当三角为左上直角三角形时，设置右边边框为透明
    }
  }
  // 当三角为右下、左下直角三角形时
  @else if ($direction == bottom-right) or ($direction == bottom-left) {
    border-bottom: $size solid $borderColor; // 底边边框样式

    @if $direction == bottom-right {
      border-left: $size solid transparent; // 当三角为右下直角三角形时，设置左边边框为透明
    } @else if $direction == bottom-left {
      border-right: $size solid transparent; // 当三你为左下直角三角形时，设置右边边框为透明
    }
  }
}